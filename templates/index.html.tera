{% extends "base" %}

{% block title %}Deployer - Home{% endblock title %}

{% block content %}

<!-- Main Container -->
<div class="container my-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2 class="fw-bold">Projects</h2>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addProjectModal">+ Add
            Project</button>
    </div>

    <div id="projectList">
        {% include "partials/projects_list" %}
    </div>
</div>

<div class="modal fade" id="addProjectModal" tabindex="-1" aria-labelledby="addProjectModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <form action="/create-project" method="post" class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addProjectModalLabel">Add Project</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="name" class="form-label">Project Name</label>
                    <input type="text" class="form-control" id="name" name="name" required>
                </div>
                <div class="mb-3">
                    <label for="github_url" class="form-label">Repository URL</label>
                    <input type="url" class="form-control" name="github_url" required>
                </div>

                <!-- Commands Selection -->
                <div class="mb-3">
                    <label for="commandSelect" class="form-label">Available Commands</label>
                    <div class="input-group">
                        <select id="commandSelect" class="form-select">
                            {% for command in commands %}
                            <option value="{{ command.name }}">{{ command.name }} —
                                {{ command.description }}</option>
                            {% endfor %}
                        </select>
                        <button type="button" class="btn btn-outline-primary" onclick="addCommand()">Add</button>
                    </div>
                </div>

                <!-- Ordered List of Selected Commands -->
                <div class="mb-3">
                    <label class="form-label">Execution Order</label>
                    <ul id="commandList" class="list-group"></ul>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-primary">Add Project</button>
            </div>
        </form>
    </div>
</div>

<script>
    function addCommand() {
        const select = document.getElementById('commandSelect');
        const list = document.getElementById('commandList');
        const selectedValue = select.value;
        const selectedText = select.options[select.selectedIndex].text;

        const li = document.createElement('li');
        li.className = "list-group-item d-flex justify-content-between align-items-center";
        li.innerHTML = `
        <span>${selectedText}</span>
        <div>
            <button type="button" class="btn btn-sm btn-outline-secondary me-1" onclick="moveUp(this)">↑</button>
            <button type="button" class="btn btn-sm btn-outline-secondary me-1" onclick="moveDown(this)">↓</button>
            <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeCommand(this)">✕</button>
        </div>
        <input type="hidden" name="commands[]" value="${selectedValue}">
    `;
        list.appendChild(li);
    }

    function moveUp(btn) {
        const li = btn.closest('li');
        if (li.previousElementSibling) {
            li.parentNode.insertBefore(li, li.previousElementSibling);
        }
    }

    function moveDown(btn) {
        const li = btn.closest('li');
        if (li.nextElementSibling) {
            li.parentNode.insertBefore(li.nextElementSibling, li);
        }
    }

    function removeCommand(btn) {
        btn.closest('li').remove();
    }
</script>

{% endblock content %}